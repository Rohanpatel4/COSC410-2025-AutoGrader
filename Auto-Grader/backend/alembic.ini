# A generic, single database configuration.

[alembic]
# path to migration scripts
script_location = alembic

# template used to generate migration file names; The default value is %%(rev)s_%%(slug)s
# file_template = %%(rev)s_%%(slug)s

# sys.path path, will be prepended to sys.path if present.
# defaults to the current working directory.
prepend_sys_path = .

# timezone to use when rendering the date
# within the migration file as well as the filename.
# If specified, requires the python-dateutil library that can be
# installed by adding `alembic[tz]` to the pip requirements
# warning: this is not portable across databases
timezone = UTC

# max length of characters to apply to the
# "slug" field
# truncate_slug_length = 40

# set to 'true' to run the environment file as a python script,
# that is, callable, rather than importing it.
# script_run_as_module = false

# revision environment configuration
# (required for autogenerate)
revision_environment = true

# provide revision identifiers, making it possible to
# identify a particular revision in the database.
# (required for autogenerate)
revision_environment = true

# Controls autocommit of DDL on connect
# autocommit = false

# default encoding of migration files
# output_encoding = utf-8

# Uncomment to enable logging of SQL statements
# logging_level = INFO

[post_write_hooks]
# post_write_hooks defines scripts or Python functions that are run
# on newly generated revision scripts.  See the documentation for further
# detail and examples

# format using "black" - use the console_scripts runner, against the "black" entrypoint
# hooks = black
# black.type = console_scripts
# black.entrypoint = black
# black.options = -l 79 REVISION_SCRIPT_FILENAME

# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualifier =

[logger_sqlalchemy]
level = WARN
handlers =
qualifier = sqlalchemy

[logger_alembic]
level = INFO
handlers =
qualifier = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic
qualifier =

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
